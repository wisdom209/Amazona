let express,request,response,User,jwt,isAuth,jwtCheck;_061‍.x([["default",()=>_061‍.o]]);_061‍.w("express",[["default",["express"],function(v){express=v}],["request",["request"],function(v){request=v}],["response",["response"],function(v){response=v}]]);_061‍.w("../models/userModel",[["default",["User"],function(v){User=v}]]);_061‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);_061‍.w("../utils",[["isAuth",["isAuth"],function(v){isAuth=v}]]);_061‍.w("../jwtCheck",[["default",["jwtCheck"],function(v){jwtCheck=v}]]);





const userRouter = express.Router();

userRouter.post("/signin", jwtCheck, (request, response) => {
    User.findOne({
        email    : request.body.email,
        password : request.body.password
    })
        .then((data) => {
            if (data) {response.send(data)
                jwt.sign({ id: data.id, isAdmin: data.isAdmin }, "secretKey", { expiresIn: "48hrs" }, (err, token) => {
                    if (err) {
                        response.send(err);
                    }
                    response.send({ token: token, admin: request.user.isAdmin });
                });
            }
            else {
                response.send("record not found");
            }
        })
        .catch((err) => response.send(err));
});

userRouter.post("/register", (request, response) => {
    const user = new User({
        name     : request.body.name,
        email    : request.body.email,
        password : request.body.password
    });

    user
        .save()
        .then((data) => response.send({ id: data.id, name: data.name, email: data.email }))
        .catch((err) => response.send({ msg: err }));
});

userRouter.get("/createadmin", (request, response) => {
    const user = new User({
        name     : "wisdom",
        email    : "freezwiz@hi2.in",
        password : "password",
        isAdmin  : true
    });

    user
        .save()
        .then((data) => response.send("Admin " + data.name + " created"))
        .catch((err) => response.send({ msg: err }));
});

userRouter.get("/me", jwtCheck, (request, response) => {
    response.send(request.user);
});

_061‍.d(userRouter);
