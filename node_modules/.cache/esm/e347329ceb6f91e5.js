let express,bodyParser,mongoose,dotenv,config,userRouter,productRouter,cors;_eb6‍.w("./node_modules/express",[["default",["express"],function(v){express=v}]]);_eb6‍.w("./node_modules/body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_eb6‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_eb6‍.w("./node_modules/dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_eb6‍.w("./config",[["default",["config"],function(v){config=v}]]);_eb6‍.w("./routes/userRoute",[["default",["userRouter"],function(v){userRouter=v}]]);_eb6‍.w("./routes/productRoutes",[["default",["productRouter"],function(v){productRouter=v}]]);_eb6‍.w("./node_modules/cors",[["default",["cors"],function(v){cors=v}]]);








const PORT = process.env.PORT || 4000;
const app = express();
app.use(bodyParser.json());

app.use(cors());

dotenv.config();

//const mongoDbUrl = config.mongoDbUrl;
const mongoDbUrl = process.env.MONGO_URI ||  "mongodb+srv://freezwiz:wizdoz@cluster0.fdboo.mongodb.net/shoppingcart?retryWrites=true&w=majority";

mongoose
    .connect(mongoDbUrl, {
        useCreateIndex     : true,
        useUnifiedTopology : true,
        useNewUrlParser    : true
    })
    .catch((err) => _eb6‍.g.console.log(err));

app.use("/api/users", userRouter);
app.use("/api/products", productRouter);


if(process.env.NODE_ENV === "production"){
    app.use(express.static("frontend/build"));
}

app.listen(PORT, () => {
    _eb6‍.g.console.log("Server now listening on port : " + PORT);
});
